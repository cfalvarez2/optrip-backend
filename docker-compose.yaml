version: "3"
services:
  db:
    container_name: "mongo"
    image: "mongo"
    ports:
      - "27017:27017"
    volumes:
      - mongodb:/data/db
    networks:
      - app-network
    # healthcheck:
    #   test: echo 'db.runCommand({serverStatus:1}).ok' | mongo --quiet | grep 1
    #   interval: 10s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 10s
  
  latam_scraper:
    build: 
      context: ./scrapers/latam_scraper/
      dockerfile: Dockerfile
    container_name: "latam_scraper"
    ports:
      - "3000:3000"
    networks:
      - app-network
    env_file:
      - ./.env
    volumes:
      - ./scrapers/latam_scraper/:/code

  turbus_scraper:
    build: 
      context: ./scrapers/turbus_scraper/
      dockerfile: Dockerfile
    container_name: "turbus_scraper"
    ports:
      - "6000:6000"
    networks:
      - app-network
    env_file:
      - ./.env
    volumes:
      - ./scrapers/turbus_scraper/:/code

  web:
    build: .
    container_name: "template-fastapi"
    depends_on:
      - db
        # condition: service_healthy
    env_file:
      - ./.env
    networks:
      - app-network
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    restart: always

volumes:
    mongodb:

networks:
  app-network:
    driver: bridge
